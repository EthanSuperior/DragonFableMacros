import Utils.macro_utils as m
from Utils.battle_utils import battle
import DFSubscripts.farming as frm
from DFSubscripts.inn import InnFight
from DFSubscripts.navigation import quest_nav
from Utils.ui_macro_utils import reposition
from Utils.df_types import Classes
import DFSubscripts.navigation as nav

def Debug(classID):
    m.sleep(3.83)
    m.Click(85, 517)
    m.sleep(4.647)
    m.Click(1029, 379)
    m.sleep(3.51)
    m.Click(848, 339)
    m.sleep(2.941)
    m.Click(853, 392)
    m.sleep(4.188)
    m.Click(1166, 697)
    m.sleep(3.071)
    m.Click(621, 551)
    battle((classID, "Multi"))
    m.sleep(1.786)
    m.Click(812, 449)
    m.sleep(2.636)
    m.Click(1167, 669)
    battle((classID, "Single"))
    m.sleep(0.389)
    m.Click(1140, 665)
    battle((classID, "Single"))
    m.sleep(1.169)
    m.Click(1140, 664)
    battle((classID, "Single"))
    m.sleep(0.841)
    m.Click(1140, 665)
    m.sleep(4.234)
    m.Click(1125, 652)
    battle((classID, "Multi"))
    m.sleep(2.309)
    m.Click(758, 621)
    m.sleep(0.949)
    m.Click(794, 451)
    m.sleep(2.355)
    m.Click(792, 469)
    m.sleep(1.17)
    m.Click(784, 621)
    m.sleep(1.083)
    m.Click(1126, 637)
    m.sleep(2.439)
    m.Click(671, 484)
    battle((classID, "Multi"))
    m.sleep(4.677)
    m.Click(986, 703)
    battle((classID, "Single"))
    m.sleep(0.787)
    m.Click(979, 699)
    m.sleep(1.948)
    m.Click(1033, 707)
    m.sleep(1.591)
    m.Click(1199, 700)
    m.sleep(3.524)
    m.Click(1122, 664)
    battle((classID, "Multi"))
    m.sleep(0.686)
    m.Click(646, 559)
    m.sleep(1.786)
    m.Click(771, 673)
    m.sleep(0.684)
    m.Click(788, 537)
    m.sleep(1.076)
    m.Click(1047, 678)
    m.sleep(1.092)
    m.Click(1184, 673)
    m.sleep(1.442)
    m.Click(1158, 677)
    battle((classID, "Single"))
    m.sleep(1.933)
    m.Click(1118, 661)
    battle((classID, "Single"))
    m.sleep(2.205)
    m.Click(976, 411)
    m.sleep(2.995)
    m.Click(458, 661)
    battle((classID, "Single"))
    m.sleep(1.762)
    m.Click(438, 652)
    m.sleep(1.869)
    m.Click(1164, 685)
    m.sleep(3.673)
    m.Click(1172, 675)
    m.sleep(1.786)
    m.Click(105, 671)
    m.sleep(3.89)
    m.Click(112, 659)
    m.sleep(3.898)
    m.Click(634, 555)
    m.sleep(2.009)
    m.Click(1076, 430)
    battle((classID, "Multi"))
    m.sleep(1.841)
    m.Click(1103, 413)
    m.sleep(2.127)
    m.Click(1156, 673)
    battle((classID, "Single"))
    m.sleep(1.52)
    m.Click(1110, 625)
    battle((classID, "Single"))
    m.sleep(1.731)
    m.Click(1128, 647)
    m.sleep(2.362)
    m.Click(667, 672)
    battle((classID, "Single"))
    m.sleep(0.607)
    m.Click(688, 543)
    m.sleep(2.271)
    m.Click(1045, 661)
    battle((classID, "Single"))
    m.sleep(0.896)
    m.Click(1034, 641)
    m.sleep(1.029)
    m.Click(1141, 657)
    m.sleep(1.901)
    m.Click(713, 613)
    battle((classID, "Single"))
    m.sleep(1.987)
    m.Click(757, 607)
    m.sleep(3.07)
    m.Click(1155, 698)
    m.sleep(3.729)
    m.Click(627, 355)
    m.sleep(5.973)
    m.Click(652, 672)
    m.sleep(2.313)
    m.Click(652, 672)

"""
Long Walk
Utils
"""

def startQuest(name):
    reposition()
    quest_nav(name)
def runQuest(name):
    try:
        if name == 'DM': frm.DefenderMedals(Classes.WDL)
        elif name == '100Rooms': frm.Rooms100(Classes.Mage)
        elif name == 'Tizheruk': frm.Farming(Classes.Necro, name)
        elif name == 'Delay': m.sleep(3)
        elif name == 'Treat': frm.Candy(Classes.WDL)
        elif name == 'Battle': battle((Classes.Chaosweaver, 'AARGH'))
        elif name == 'DeathKnight': frm.DeathKnight()
        elif name == 'Unlucky': frm.UnluckyDoom()
        elif name == 'Visor': frm.Visor()
        elif 'Aeris' in name: frm.AerisBattlespire()
        elif 'Inn' in name: InnFight(Classes.Chaosweaver, name.removeprefix('Inn'))
        elif name == 'PotionMastery': frm.Nythera()
        elif 'Gold' in name: frm.NinjaGold()
        elif 'SlayBells' in name: frm.SlayBells()
        elif name == 'SellThem': nav.sell_items_dragonless()
        else: Debug(Classes.Mage)
        return True
    except AssertionError: return False



if __name__ == '__main__':
    import os
    import pyautogui
    pyautogui.FAILSAFE = True
    os.chdir('C:/Users/Evan Chase/Desktop/Files/ProgrammingGit/College/Fall 2023/DragonFable/Images')
    m.sleep(1)
    for _ in range(3): Debug(Classes.KidDrag)
